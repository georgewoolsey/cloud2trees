% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trees_biomass.R
\name{trees_biomass}
\alias{trees_biomass}
\title{Estimate tree biomass (or crown biomass) for a tree list}
\usage{
trees_biomass(
  tree_list,
  crs = NA,
  study_boundary = NA,
  input_landfire_dir = NULL,
  input_foresttype_dir = NULL,
  method = NA
)
}
\arguments{
\item{tree_list}{data.frame. A data frame with the columns \code{treeID}, \code{tree_x}, and \code{tree_y}.
If an \code{sf} class object with POINT geometry (see \code{\link[sf:st_geometry_type]{sf::st_geometry_type()}}), the program will use the data "as-is" and only require the \code{treeID} column.
Other required columns include:
\itemize{
\item \code{crown_area_m2}, \code{tree_height_m} (e.g. as exported by \code{\link[=raster2trees]{raster2trees()}})
\item \code{tree_cbh_m} (e.g. as exported by \code{\link[=trees_cbh]{trees_cbh()}})
\item and one of \code{dbh_cm}, \code{dbh_m}, or  \code{basal_area_m2} (e.g. as exported by \code{\link[=trees_dbh]{trees_dbh()}})
}}

\item{crs}{string. A crs string as returned from \code{\link[sf:st_crs]{sf::st_crs()}} or the EPSG code of the x,y coordinates.
Defaults to the crs of the \code{tree_list} data if of class "sf".}

\item{study_boundary}{sf. The boundary of the study are to define the area of interest which may extend beyond the space with trees.
If no boundary given, the AOI will be built from location of trees in the tree list.}

\item{input_landfire_dir}{directory where LANDFIRE CBD data exists. Use \code{\link[=get_landfire]{get_landfire()}} first.}

\item{input_foresttype_dir}{directory where Forest Type Groups data exists. Use \code{\link[=get_foresttype]{get_foresttype()}} first.}

\item{method}{character. one (e.g. \code{"landfire"}) or multiple (e.g. \code{c("cruz","landfire")}) of the following biomass estimation methods:
\itemize{
\item Tree crown biomass in kilograms:
\itemize{
\item "landfire" - based on LANDFIRE's Forest Canopy Bulk Density (CBD) data (\code{\link[=trees_biomass_landfire]{trees_biomass_landfire()}})
\item "cruz" - based on Cruz et al. (2003) canopy fuel stratum equations (\code{\link[=trees_biomass_cruz]{trees_biomass_cruz()}})
}
\item Tree total above ground biomass in kilograms:
\itemize{
\item coming soon
}
}}
}
\value{
Returns a list of objects: tree_list = spatial data frame of individual trees
; stand_cell_data_landfire = data frame of stands/cells in same projection as the LANDFIRE raster data
; stand_cell_data_cruz = data frame of stands/cells in same projection as the FIA forest type group raster data

See code in examples.
}
\description{
\code{trees_biomass()} streamlines the process for estimating individual tree biomass in kilograms, or the component biomass of the tree crown in kilograms.
Users can select one or all of the following methods available in the package for estimating biomass:
\itemize{
\item Tree crown biomass in kilograms:
\itemize{
\item "landfire" - based on LANDFIRE's Forest Canopy Bulk Density (CBD) data (\code{\link[=trees_biomass_landfire]{trees_biomass_landfire()}})
\item "cruz" - based on Cruz et al. (2003) canopy fuel stratum equations (\code{\link[=trees_biomass_cruz]{trees_biomass_cruz()}})
}
\item Tree total above ground biomass in kilograms:
\itemize{
\item coming soon
}
}

If multiple methods are selected (e.g. \code{method = c("cruz","landfire")}), then the program will compile the
biomass estimates and return one tree list.
}
\examples{
 \dontrun{
library(tidyverse)
library(sf)
my_n <- 122
# fake tree list
tl <- dplyr::tibble(
    treeID = c(1:my_n)
    , tree_x = rnorm(n=my_n, mean = 458064, sd = 33)
    , tree_y = rnorm(n=my_n, mean = 4450074, sd = 33)
    , tree_height_m = rnorm(n=my_n, mean = 10, sd = 7)
  ) \%>\%
  dplyr::mutate(
    tree_height_m = ifelse(tree_height_m<1.37, 1.37, tree_height_m) # above DBH
    , crown_area_m2 = 0.47+(0.49*tree_height_m)
    , tree_cbh_m = 0.72+(0.53*tree_height_m)
    , dbh_cm = -2.3+(2.14*tree_height_m)
  )
# how does our fake tree list look?
tl \%>\% dplyr::glimpse()
tl \%>\% ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(x = dbh_cm, y = tree_height_m))
# call the function
tl_landfire <- trees_biomass_landfire(tree_list = tl, crs = "32613")
# what is in it?
tl_landfire \%>\% names()
# look at the trees
tl_landfire$tree_list \%>\% dplyr::glimpse()
# look at the stand
tl_landfire$stand_cell_data \%>\% dplyr::filter(!is.na(trees)) \%>\% dplyr::glimpse()
# the stand CBD
 tl_landfire$stand_cell_data \%>\%
   dplyr::filter(trees>0) \%>\%
   sf::st_drop_geometry() \%>\%
   dplyr::count(landfire_stand_kg_per_m3)
# get the projection for the stand cell data
epsg_code <- tl_landfire$stand_cell_data$rast_epsg_code[1] \%>\% as.numeric()
 # plot the stand cell data with trees overlaid
 tl_landfire$stand_cell_data \%>\%
   ggplot2::ggplot() +
   ggplot2::geom_tile(ggplot2::aes(x=x,y=y,fill = landfire_stand_kg_per_m3), color = "gray44") +
   ggplot2::geom_text(ggplot2::aes(x=x,y=y,label = trees), color = "white") +
   ggplot2::geom_sf(
     data = tl_landfire$tree_list \%>\% sf::st_transform(crs = epsg_code)
     , ggplot2::aes(color = landfire_crown_biomass_kg)
   ) +
   ggplot2::labs(fill="stand kg/m3", color = "tree kg", caption = "# trees shown in cell") +
   ggplot2::scale_fill_viridis_c(option = "rocket", na.value = "gray", direction = -1) +
   ggplot2::scale_color_viridis_c(option = "viridis", na.value = "gray22", begin = 0.6) +
   ggplot2::theme_void()
 }
}
\references{
See references in:
\itemize{
\item \code{\link[=trees_biomass_landfire]{trees_biomass_landfire()}}
\item \code{\link[=trees_biomass_cruz]{trees_biomass_cruz()}}
}
}
