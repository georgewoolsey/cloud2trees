% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trees_biomass_landfire.R
\name{trees_biomass_landfire}
\alias{trees_biomass_landfire}
\title{Estimate tree biomass for a tree list using LANDFIRE data}
\usage{
trees_biomass_landfire(
  tree_list,
  crs = NA,
  study_boundary = NA,
  input_landfire_dir = NULL
)
}
\arguments{
\item{tree_list}{data.frame. A data frame with the columns \code{treeID}, \code{tree_x}, \code{tree_y}, and \code{tree_height_m}.
If an \code{sf} class object with POINT geometry (see \code{\link[sf:st_geometry_type]{sf::st_geometry_type()}}), the program will use the data "as-is" and only require the \code{treeID} column.}

\item{crs}{string. A crs string as returned from \code{\link[sf:st_crs]{sf::st_crs()}} or the EPSG code of the x,y coordinates.
Defaults to the crs of the \code{tree_list} data if of class "sf".}

\item{study_boundary}{sf. The boundary of the study are to define the area of the regional model.
If no boundary given, regional model will be built from location of trees in the tree list.}

\item{input_landfire_dir}{directory where LANDFIRE Forest Canopy Bulk Density data exists. Use \code{\link[=get_landfire]{get_landfire()}} first.}

\item{max_search_dist_m}{number. Maximum search distance (m) to obtain forest type group data for trees in \code{tree_list} that overlap with non-forest data in the original LANDFIRE data.
Larger search distances will increase processing time and possibly result in memory issues.}
}
\value{
Returns a list of objects: tree_list = spatial data frame of individual trees; landfire_rast = raster of forest types in the area.
}
\description{
\code{trees_biomass_landfire()} uses the input tree list (e.g. as exported by \code{\link[=raster2trees]{raster2trees()}}) with the columns
\code{treeID}, \code{tree_x}, \code{tree_y} to attach an estimate of tree crown biomass using LANDFIRE's Forest Canopy Bulk Density (CBD) data
produced jointly by the U.S. Department of Agriculture and U.S. Department of the Interior.
If a spatial data frame of points is the input tree list, then the columns \code{tree_x}, \code{tree_y} are not required.

LANDFIRE's Forest Canopy Bulk Density (CBD) data is attached to each tree in the tree list based on the spatial overlap with the raster data set (see references).
Canopy Bulk Density is mass of flammable material per unit volume of the tree crown typically expressed in units of mass per unit volume (e.g., kilograms per cubic meter).

The simplified process for attaching tree crown biomass in kilograms to a tree is:
\itemize{
\item Nearest neighbor imputation is used to fill LANDFIRE data if a tree falls inside a non-forest cell in the original data
\item The LANDFIRE estimate of CBD is distributed across the individual trees that fall in a raster cell by:
\enumerate{
\item get cfl in kg/m2 == kg_per_m2 = mean_crown_length_m * landfire_stand_kg_per_m3
\item get stand biomass in kg at the stand level == biomass_kg = kg_per_m2 * overlap_area_m2
\item single tree CBD in kg/m3 will be constant by stand/cell == landfire_tree_kg_per_m3 = biomass_kg / sum_crown_volume_m3
\item at the tree level landfire_tree_biomass_kg = landfire_tree_kg_per_m3*crown_volume_m3
}
}
}
\examples{
 \dontrun{
library(tidyverse)
library(sf)
my_n <- 122
# fake tree list
tl <- dplyr::tibble(
    treeID = c(1:my_n)
    , tree_x = rnorm(n=my_n, mean = 458064, sd = 33)
    , tree_y = rnorm(n=my_n, mean = 4450074, sd = 33)
    , tree_height_m = rnorm(n=my_n, mean = 10, sd = 7)
  ) \%>\%
  dplyr::mutate(
    tree_height_m = ifelse(tree_height_m<1.37, 1.37, tree_height_m) # above DBH
    , crown_area_m2 = 0.47+(0.49*tree_height_m)
    , tree_cbh_m = 0.72+(0.53*tree_height_m)
    , dbh_cm = -2.3+(2.14*tree_height_m)
  )
# how does our fake tree list look?
tl \%>\% dplyr::glimpse()
tl \%>\% ggplot2::ggplot() + ggplot2::geom_point(ggplot2::aes(x = dbh_cm, y = tree_height_m))
# call the function
tl_landfire <- trees_biomass_landfire(tree_list = tl, crs = "32613")
# what is in it?
tl_landfire \%>\% names()
# look at the trees
tl_landfire$tree_list \%>\% dplyr::glimpse()
# look at the stand
tl_landfire$stand_cell_data \%>\% dplyr::filter(!is.na(trees)) \%>\% dplyr::glimpse()
# the stand CBD
 tl_landfire$stand_cell_data \%>\%
   dplyr::filter(trees>0) \%>\%
   sf::st_drop_geometry() \%>\%
   dplyr::count(landfire_stand_kg_per_m3)
# get the projection for the stand cell data
epsg_code <- tl_landfire$stand_cell_data$rast_epsg_code[1] \%>\% as.numeric()
 # plot the stand cell data with trees overlaid
 tl_landfire$stand_cell_data \%>\%
   ggplot2::ggplot() +
   ggplot2::geom_tile(ggplot2::aes(x=x,y=y,fill = landfire_stand_kg_per_m3), color = "gray44") +
   ggplot2::geom_text(ggplot2::aes(x=x,y=y,label = trees), color = "white") +
   ggplot2::geom_sf(
     data = tl_landfire$tree_list \%>\% sf::st_transform(crs = epsg_code)
     , ggplot2::aes(color = landfire_tree_biomass_kg)
   ) +
   ggplot2::labs(fill="stand kg/m3", color = "tree kg", caption = "# trees shown in cell") +
   ggplot2::scale_fill_viridis_c(option = "rocket", na.value = "gray", direction = -1) +
   ggplot2::scale_color_viridis_c(option = "viridis", na.value = "gray22", begin = 0.6) +
   ggplot2::theme_void()
 }
}
\references{
\itemize{
\item \href{https://landfire.gov/fuel/cbd}{LANDFIRE Forest Canopy Bulk Density (CBD)}
U.S. Department of Agriculture and U.S. Department of the Interior.
}
}
