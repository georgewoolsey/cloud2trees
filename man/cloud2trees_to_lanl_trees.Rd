% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloud2trees_to_lanl_trees.R
\name{cloud2trees_to_lanl_trees}
\alias{cloud2trees_to_lanl_trees}
\title{Use outputs from \code{\link[=cloud2trees]{cloud2trees()}} to generate inputs for LANL TREES program}
\usage{
cloud2trees_to_lanl_trees(
  input_dir,
  study_boundary = NA,
  bbox_aoi = T,
  buffer = 0,
  topofile = "flat",
  cbd_method = "landfire",
  output_dir = tempdir(),
  fuel_litter = list(ilitter = 0, lrho = 4.667, lmoisture = 0.06, lss = 5e-04, ldepth =
    0.06),
  fuel_grass = list(igrass = 0, grho = 1.17, gmoisture = 0.06, gss = 5e-04, gdepth =
    0.27)
)
}
\arguments{
\item{input_dir}{directory with outputs from \code{\link[=cloud2trees]{cloud2trees()}}. The default directory written by \code{\link[=cloud2trees]{cloud2trees()}} is \code{point_cloud_processing_delivery}}

\item{study_boundary}{sf. The boundary of the study area which is used to determine the outputs}

\item{bbox_aoi}{logical. Should the study_boundary be transformed to a bounding box instead of it's original shape for determining the objects within the boundary?}

\item{buffer}{numeric. Buffer to be applied to the study area prior to determining objects within the boundary.
Units are determined by the horizontal CRS settings of the tree list data}

\item{topofile}{character. one of \code{"flat"} or \code{"dtm"}:
\itemize{
\item "flat" - always flat for QUIC-Fire
\item "dtm" - uses the topo.dat file created based on the DTM; potentially for FIRETEC
}}

\item{cbd_method}{character. one of \code{"landfire"} or \code{"cruz"}:
\itemize{
\item Tree crown biomass method:
\itemize{
\item "landfire" - based on LANDFIRE's Forest Canopy Bulk Density (CBD) data (\code{\link[=trees_biomass_landfire]{trees_biomass_landfire()}})
\item "cruz" - based on Cruz et al. (2003) canopy fuel stratum equations (\code{\link[=trees_biomass_cruz]{trees_biomass_cruz()}})
}
}}

\item{output_dir}{parent directory where new folder \code{lanl_trees_delivery} will be written for exports}

\item{fuel_litter}{list. a \code{list()} or numeric vector \code{c()}. see default.
\itemize{
\item must have parameters in order:
\itemize{
\item "ilitter" : 0 = no litter, 1 = litter
\item "lrho" : litter bulk density (kg/m3)
\item "lmoisture : litter moisture (percent on 0-1 scale)
\item "lss" : litter sizescale (m)
\item "ldepth" : litter depth (m)
}
}}

\item{fuel_grass}{list. a \code{list()} or numeric vector \code{c()}. see default.
\itemize{
\item must have parameters in order:
\itemize{
\item "igrass" : 0 = no grass, 1 = grass
\item "grho" : grass bulk density (kg/m3)
\item "gmoisture" : grass moisture (percent on 0-1 scale)
\item "gss" : grass sizescale (m)
\item "gdepth" : grass depth (m)
}
}}
}
\value{
Returns a list of objects:
\itemize{
\item "tree_list" = the cropped tree list based on the study area extent with customized settings
\item "aoi" = the study area extent with customized settings
\item "dtm" = the cropped DTM based on the study area extent with customized settings
\item "domain_path" = the path to the "Lidar_Bounds.geojson" file
\item "topofile_path" = the path to the "topo.dat" file
\item "fuellist_path" = the path to the TREES program "fuellist" file
\item "treelist_path" = the path to the "Cloud2Trees_TreeList.txt" file
}
}
\description{
\code{cloud2trees_to_lanl_trees()} uses the output from \code{\link[=cloud2trees]{cloud2trees()}} to generate inputs for LANL TREES
program as a pathway to fire modeling with Quic-Fire

The primary input is a directory with outputs from \code{\link[=cloud2trees]{cloud2trees()}}. The default directory written by \code{\link[=cloud2trees]{cloud2trees()}} is \code{point_cloud_processing_delivery}
which must contain (at a minimum):
\itemize{
\item DTM raster with a name formatted as: "dtm_xx.tif"
\item Tree list data with the name formatted as : "final_detected_tree_tops.gpkg" (tree points) or "final_detected_crowns.gpkg" (tree crowns)
\item A study area spatial file that can be read with the \code{sf} package (see \code{\link[sf:st_drivers]{sf::st_drivers()}})
}
}
\examples{
 \dontrun{
 # test las file but this could also be a directory path with >1 .las|.laz files
 i <- system.file("extdata", "MixedConifer.laz", package="lidR")
 # set the dir to write the output
 my_dir <- tempdir()
 # run it
 cloud2trees_ans <- cloud2trees::cloud2trees(
   output_dir = my_dir
   , input_las_dir = i
   # turn on all of the attribute estimations
   , estimate_tree_dbh = T
   , estimate_tree_type = T
   , estimate_tree_hmd = T
   , hmd_tree_sample_prop = 0.5
   , hmd_estimate_missing_hmd = T
   , estimate_biomass_method = "landfire"
   , estimate_tree_cbh = T
   , cbh_tree_sample_prop = 0.3
   , cbh_estimate_missing_cbh = T
 )
 # generate a fake study_boundary we know overlaps the tree list
 my_aoi <- cloud2trees_ans$treetops_sf \%>\%
   sf::st_bbox() \%>\%
   sf::st_as_sfc() \%>\%
   sf::st_buffer(-10) \%>\%
   sf::st_as_sf()
 # plot it
 ggplot2::ggplot() +
   ggplot2::geom_sf(data = cloud2trees_ans$treetops_sf) +
   ggplot2::geom_sf(data = my_aoi, fill = NA, color = "blue")
 # cloud2trees::cloud2trees() wrote the `point_cloud_processing_delivery` folder
 cloud2trees_output_dir <- file.path(my_dir,"point_cloud_processing_delivery")
 list.files(cloud2trees_output_dir)
 list.dirs(cloud2trees_output_dir, recursive = F)
 # now cloud2trees_to_lanl_trees()
 cloud2trees_to_lanl_trees_ans <- cloud2trees_to_lanl_trees(
   input_dir = cloud2trees_output_dir
   , study_boundary = my_aoi
   , bbox_aoi = F
   , buffer = 0
   , topofile = "flat"
   , cbd_method = "landfire"
   , output_dir = cloud2trees_output_dir
 )
 cloud2trees_to_lanl_trees_ans \%>\% names()
 list.dirs(cloud2trees_output_dir, recursive = F)
 lanl_trees_output_dir <- file.path(cloud2trees_output_dir,"lanl_trees_delivery")
 list.files(lanl_trees_output_dir)
 }
}
\references{
\itemize{
\item \url{https://github.com/lanl/Trees/}
\item \href{https://doi.org/10.1016/j.envsoft.2019.104616}{Quic-Fire}
}
}
